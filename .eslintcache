[{"/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/index.tsx":"1","/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/reportWebVitals.ts":"2","/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/App.tsx":"3","/Users/macbook/Desktop/programing/something/trouble-form/src/index.tsx":"4","/Users/macbook/Desktop/programing/something/trouble-form/src/reportWebVitals.ts":"5","/Users/macbook/Desktop/programing/something/trouble-form/src/App.tsx":"6","/Users/macbook/Desktop/programing/something/trouble-form/src/Router.tsx":"7","/Users/macbook/Desktop/programing/something/trouble-form/src/views/index.ts":"8","/Users/macbook/Desktop/programing/something/trouble-form/src/views/From.tsx":"9","/Users/macbook/Desktop/programing/something/trouble-form/src/views/TroubleList.tsx":"10","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/reducer.ts":"11","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/actionTypes.ts":"12","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/actions.ts":"13","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/store.ts":"14","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/operations.ts":"15","/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/index.ts":"16","/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/TextInput.tsx":"17","/Users/macbook/Desktop/programing/something/trouble-form/src/components/Header/Header.tsx":"18","/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/PrimaryButton.tsx":"19","/Users/macbook/Desktop/programing/something/trouble-form/src/firebase/index.js":"20","/Users/macbook/Desktop/programing/something/trouble-form/src/firebase/config.js":"21","/Users/macbook/Desktop/programing/something/trouble-form/src/views/TroubleDetail.tsx":"22","/Users/macbook/Desktop/programing/something/trouble-form/src/components/Header/ClosableDrawer.tsx":"23","/Users/macbook/Desktop/programing/something/trouble-form/src/views/SignIn.tsx":"24","/Users/macbook/Desktop/programing/something/trouble-form/src/views/Menu.tsx":"25"},{"size":500,"mtime":1612358815670,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1612359783716,"results":"28","hashOfConfig":"27"},{"size":576,"mtime":1612393701840,"results":"29","hashOfConfig":"27"},{"size":867,"mtime":1612600509434,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1612397920991,"results":"32","hashOfConfig":"31"},{"size":276,"mtime":1612614690489,"results":"33","hashOfConfig":"31"},{"size":648,"mtime":1613481109165,"results":"34","hashOfConfig":"31"},{"size":246,"mtime":1613481141483,"results":"35","hashOfConfig":"31"},{"size":4335,"mtime":1613305710018,"results":"36","hashOfConfig":"31"},{"size":2775,"mtime":1613087235903,"results":"37","hashOfConfig":"31"},{"size":510,"mtime":1612921148520,"results":"38","hashOfConfig":"31"},{"size":107,"mtime":1612921779578,"results":"39","hashOfConfig":"31"},{"size":267,"mtime":1612921888825,"results":"40","hashOfConfig":"31"},{"size":612,"mtime":1612831456930,"results":"41","hashOfConfig":"31"},{"size":1877,"mtime":1613306201406,"results":"42","hashOfConfig":"31"},{"size":112,"mtime":1612615501063,"results":"43","hashOfConfig":"31"},{"size":875,"mtime":1613304453072,"results":"44","hashOfConfig":"31"},{"size":1693,"mtime":1613086717479,"results":"45","hashOfConfig":"31"},{"size":676,"mtime":1612616773451,"results":"46","hashOfConfig":"31"},{"size":460,"mtime":1612755891850,"results":"47","hashOfConfig":"31"},{"size":403,"mtime":1612744139952,"results":"48","hashOfConfig":"31"},{"size":2153,"mtime":1613482300787,"results":"49","hashOfConfig":"31"},{"size":1993,"mtime":1613479109812,"results":"50","hashOfConfig":"31"},{"size":1420,"mtime":1613481128009,"results":"51","hashOfConfig":"31"},{"size":1413,"mtime":1613481849736,"results":"52","hashOfConfig":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1jgdkh6",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1pymijk",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/index.tsx",[],["110","111","112","113","114"],"/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/reportWebVitals.ts",[],"/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/App.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/index.tsx",[],["115","116","117","118","119"],"/Users/macbook/Desktop/programing/something/trouble-form/src/reportWebVitals.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/App.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/Router.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/index.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/From.tsx",["120"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { push } from 'connected-react-router';\nimport { PrimaryButton, TextInput } from '../components/UI';\nimport '../assets/css/common.css';\nimport { register } from '../reducks/troubleLists/operations';\n\nconst From: React.FC = () => {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [age, setAge] = useState(0);\n  const [business, setBusiness] = useState('');\n  const [title, setTitle] = useState('');\n  const [backGround, setBackGround] = useState('');\n  const [example, setExample] = useState('');\n  const [remark, setRemark] = useState('');\n\n  const [usernameError, setUsernameError] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [backGroundError, setBackGroundError] = useState('');\n\n  const inputUsername = useCallback(\n    (event) => {\n      setUsername(event.target.value);\n    },\n    [setUsername]\n  );\n\n  const inputAge = useCallback(\n    (event) => {\n      setAge(event.target.value);\n    },\n    [setAge]\n  );\n\n  const inputBusiness = useCallback(\n    (event) => {\n      setBusiness(event.target.value);\n    },\n    [setBusiness]\n  );\n\n  const inputTitle = useCallback(\n    (event) => {\n      setTitle(event.target.value);\n    },\n    [setTitle]\n  );\n\n  const inputBackGround = useCallback(\n    (event) => {\n      setBackGround(event.target.value);\n    },\n    [setBackGround]\n  );\n\n  const inputExample = useCallback(\n    (event) => {\n      setExample(event.target.value);\n    },\n    [setExample]\n  );\n\n  const inputRemark = useCallback(\n    (event) => {\n      setRemark(event.target.value);\n    },\n    [setRemark]\n  );\n\n  const submit = (): void => {\n    const userErrorMsg = !username ? '必須項目です' : '';\n    setUsernameError(userErrorMsg);\n    const titleErrorMsg = !title ? '必須項目です' : '';\n    setTitleError(titleErrorMsg);\n    const backGroundErrorMsg = !backGround ? '必須項目です' : '';\n    setBackGroundError(backGroundErrorMsg);\n\n    if (userErrorMsg || titleErrorMsg || backGroundErrorMsg) {\n      alert('入力エラー');\n      window.scrollTo(0, 0);\n      return;\n    }\n    dispatch(\n      register(username, age, business, title, backGround, example, remark)\n    );\n  };\n\n  return (\n    <div>\n      <section className=\"container\">\n        <TextInput\n          fullWidth\n          label=\"投稿者(必須)\"\n          multiline={false}\n          rows={1}\n          value={username}\n          required={false}\n          type=\"text\"\n          error={usernameError}\n          onChange={inputUsername}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"年齢\"\n          multiline={false}\n          rows={1}\n          value={age}\n          required={false}\n          type=\"number\"\n          error=\"\"\n          onChange={inputAge}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"職業\"\n          multiline={false}\n          rows={1}\n          value={business}\n          required={false}\n          type=\"text\"\n          error=\"\"\n          onChange={inputBusiness}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"表題(必須)\"\n          multiline={false}\n          rows={1}\n          value={title}\n          required={false}\n          type=\"text\"\n          error={titleError}\n          onChange={inputTitle}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"背景(必須)\"\n          multiline\n          rows={10}\n          value={backGround}\n          required={false}\n          type=\"text\"\n          error={backGroundError}\n          onChange={inputBackGround}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"サービス例\"\n          multiline\n          rows={10}\n          value={example}\n          required={false}\n          type=\"text\"\n          error=\"\"\n          onChange={inputExample}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"備考\"\n          multiline\n          rows={10}\n          value={remark}\n          required={false}\n          type=\"text\"\n          error=\"\"\n          onChange={inputRemark}\n        />\n\n        <div className=\"btn-container\">\n          <PrimaryButton label=\"登録\" onClick={submit} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default From;\n","/Users/macbook/Desktop/programing/something/trouble-form/src/views/TroubleList.tsx",["121"],"import { push } from 'connected-react-router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { fetchTroubleLists } from '../reducks/troubleLists/operations';\n// import fetchTroubleLists from '../reducks/troubleLists/operations';\nimport { RootState } from '../reducks/store';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n\nconst useStyles = makeStyles({\n  container: {\n    paddingTop: 24,\n  },\n  table: {\n    width: '100%',\n  },\n});\n\nconst TroubleList = () => {\n  const dispatch = useDispatch();\n  const troubles = useSelector((state: RootState) => state.troubles);\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(fetchTroubleLists());\n  }, []);\n  console.log(troubles);\n  return (\n    <>\n      <div>\n        <TableContainer className={classes.container} component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>タイトル</StyledTableCell>\n                <StyledTableCell align=\"right\">投稿者名</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {troubles.troubles.map((trouble) => (\n                <StyledTableRow key={trouble.id}>\n                  <StyledTableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    onClick={() =>\n                      dispatch(push(`troubleList/detail/${trouble.id}`))\n                    }\n                  >\n                    {trouble.title}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    {trouble.username}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n  );\n};\n\nexport default TroubleList;\n","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/reducer.ts",["122"],"import ActionTypes from '../actionTypes';\nimport { TroubleState, TroubleActionTypes } from './types';\n\nconst initialState: TroubleState = {\n  troubles: [],\n};\n\nexport const troublesReducer = (\n  state = initialState,\n  action: TroubleActionTypes\n): TroubleState => {\n  console.log(action);\n  switch (action.type) {\n    case ActionTypes.fetchTroubleLists:\n      return {\n        ...state,\n        troubles: [...action.payload],\n      };\n    default:\n      // const _: never = action;\n      return state;\n  }\n};\n","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/actionTypes.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/actions.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/store.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/operations.ts",["123"],"import { Dispatch, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { push } from 'connected-react-router';\nimport firebase from 'firebase/app';\n// import ActionTypes from '../actionTypes';\nimport { TroubleActionTypes, Trouble } from './types';\nimport { RootState } from '../store';\nimport { db, FirebaseTimeStamp } from '../../firebase';\nimport { fetchTorablesAction } from './actions';\n\nconst troubleRef = db.collection('troubles');\n\nexport const register: ActionCreator<\n  ThunkAction<void, RootState, undefined, TroubleActionTypes>\n> = (\n  username: string,\n  age: number,\n  business: string,\n  title: string,\n  backGround: string,\n  example: string,\n  remark: string\n) => {\n  return (dispatch: Dispatch) => {\n    const timestamp = FirebaseTimeStamp.now();\n\n    const ref = troubleRef.doc();\n\n    const data = {\n      id: ref.id,\n      username,\n      age,\n      business,\n      title,\n      backGround,\n      example,\n      remark,\n      created_at: timestamp,\n      updated_at: timestamp,\n    };\n\n    db.collection('troubles').doc(ref.id).set(data, { merge: true });\n    alert('登録しました');\n    dispatch(push('/troubleList'));\n  };\n};\n\nexport const fetchTroubleLists: ActionCreator<\n  ThunkAction<void, RootState, undefined, TroubleActionTypes>\n> = () => {\n  return (dispatch: Dispatch) => {\n    db.collection('troubles').onSnapshot(\n      (\n        snapshots: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n      ) => {\n        const troubleLists: Trouble[] = [];\n        snapshots.forEach(\n          (\n            snapshot: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n          ) => {\n            const trouble = snapshot.data() as Trouble;\n            troubleLists.push(trouble);\n          }\n        );\n        dispatch(fetchTorablesAction(troubleLists));\n      }\n    );\n  };\n};\n","/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/index.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/TextInput.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/components/Header/Header.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/PrimaryButton.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/firebase/index.js",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/firebase/config.js",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/TroubleDetail.tsx",["124"],"/Users/macbook/Desktop/programing/something/trouble-form/src/components/Header/ClosableDrawer.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/SignIn.tsx",["125"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport '../assets/css/common.css';\nimport { PrimaryButton, TextInput } from '../components/UI';\n\nconst SignIn = () => {\n  const dispatch = useDispatch();\n  const [id, setId] = useState('');\n  const [pass, setPass] = useState(0);\n\n  const inputId = useCallback(\n    (event) => {\n      setId(event.target.value);\n    },\n    [setId]\n  );\n\n  const inputPass = useCallback(\n    (event) => {\n      setPass(event.target.value);\n    },\n    [setPass]\n  );\n\n  const submit = (): void => {\n    if (id !== 'some' && pass !== 12) {\n      alert('idまたはパスワードが違います');\n      window.scrollTo(0, 0);\n      return;\n    }\n    dispatch(push('/menu'));\n  };\n\n  return (\n    <div className=\"container\">\n      <TextInput\n        fullWidth\n        label=\"ID\"\n        multiline\n        rows={1}\n        value={id}\n        required={false}\n        type=\"text\"\n        error=\"\"\n        onChange={inputId}\n      />\n\n      <TextInput\n        fullWidth\n        label=\"pass\"\n        multiline\n        rows={1}\n        value={pass}\n        required={false}\n        type=\"text\"\n        error=\"\"\n        onChange={inputPass}\n      />\n\n      <div className=\"btn-container\">\n        <PrimaryButton label=\"登録\" onClick={submit} />\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","/Users/macbook/Desktop/programing/something/trouble-form/src/views/Menu.tsx",["126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"127","replacedBy":"137"},{"ruleId":"129","replacedBy":"138"},{"ruleId":"131","replacedBy":"139"},{"ruleId":"133","replacedBy":"140"},{"ruleId":"135","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":80,"column":7,"nodeType":"144","messageId":"145","endLine":80,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":60,"column":3,"nodeType":"148","messageId":"145","endLine":60,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":12,"column":3,"nodeType":"148","messageId":"145","endLine":12,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":43,"column":5,"nodeType":"144","messageId":"145","endLine":43,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":41,"column":5,"nodeType":"148","messageId":"145","endLine":41,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":28,"column":7,"nodeType":"144","messageId":"145","endLine":28,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":48,"column":53,"nodeType":"148","messageId":"145","endLine":48,"endColumn":64},"lines-around-directive",["149"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["149"],[],[],[],[],"no-alert","Unexpected alert.","CallExpression","unexpected","no-console","Unexpected console statement.","MemberExpression","padding-line-between-statements"]