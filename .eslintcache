[{"/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/index.tsx":"1","/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/reportWebVitals.ts":"2","/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/App.tsx":"3","/Users/macbook/Desktop/programing/something/trouble-form/src/index.tsx":"4","/Users/macbook/Desktop/programing/something/trouble-form/src/reportWebVitals.ts":"5","/Users/macbook/Desktop/programing/something/trouble-form/src/App.tsx":"6","/Users/macbook/Desktop/programing/something/trouble-form/src/Router.tsx":"7","/Users/macbook/Desktop/programing/something/trouble-form/src/views/index.ts":"8","/Users/macbook/Desktop/programing/something/trouble-form/src/views/From.tsx":"9","/Users/macbook/Desktop/programing/something/trouble-form/src/views/TroubleList.tsx":"10","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/reducer.ts":"11","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/actionTypes.ts":"12","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/actions.ts":"13","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/store.ts":"14","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/operations.ts":"15","/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/index.ts":"16","/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/TextInput.tsx":"17","/Users/macbook/Desktop/programing/something/trouble-form/src/components/Header/Header.tsx":"18","/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/PrimaryButton.tsx":"19","/Users/macbook/Desktop/programing/something/trouble-form/src/firebase/index.js":"20","/Users/macbook/Desktop/programing/something/trouble-form/src/firebase/config.js":"21","/Users/macbook/Desktop/programing/something/trouble-form/src/views/TroubleDetail.tsx":"22","/Users/macbook/Desktop/programing/something/trouble-form/src/components/Header/ClosableDrawer.tsx":"23","/Users/macbook/Desktop/programing/something/trouble-form/src/views/SignIn.tsx":"24","/Users/macbook/Desktop/programing/something/trouble-form/src/views/Menu.tsx":"25","/Users/macbook/Desktop/programing/something/trouble-form/src/views/IdiaForm.tsx":"26","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/idiaLists/reducer.ts":"27","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/idiaLists/actionTypes.ts":"28","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/idiaLists/operations.ts":"29","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/idiaLists/actions.ts":"30","/Users/macbook/Desktop/programing/something/trouble-form/src/views/IdiaList.tsx":"31","/Users/macbook/Desktop/programing/something/trouble-form/src/views/IdiaDetail.tsx":"32"},{"size":500,"mtime":1612358815670,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1612359783716,"results":"35","hashOfConfig":"34"},{"size":576,"mtime":1612393701840,"results":"36","hashOfConfig":"34"},{"size":867,"mtime":1612600509434,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":1612397920991,"results":"39","hashOfConfig":"38"},{"size":276,"mtime":1612614690489,"results":"40","hashOfConfig":"38"},{"size":907,"mtime":1613571918275,"results":"41","hashOfConfig":"38"},{"size":400,"mtime":1613571866247,"results":"42","hashOfConfig":"38"},{"size":4568,"mtime":1613525531850,"results":"43","hashOfConfig":"38"},{"size":2777,"mtime":1613527920638,"results":"44","hashOfConfig":"38"},{"size":510,"mtime":1612921148520,"results":"45","hashOfConfig":"38"},{"size":107,"mtime":1612921779578,"results":"46","hashOfConfig":"38"},{"size":267,"mtime":1612921888825,"results":"47","hashOfConfig":"38"},{"size":685,"mtime":1613526853781,"results":"48","hashOfConfig":"38"},{"size":1844,"mtime":1613528793559,"results":"49","hashOfConfig":"38"},{"size":112,"mtime":1612615501063,"results":"50","hashOfConfig":"38"},{"size":985,"mtime":1613485430209,"results":"51","hashOfConfig":"38"},{"size":1693,"mtime":1613086717479,"results":"52","hashOfConfig":"38"},{"size":676,"mtime":1612616773451,"results":"53","hashOfConfig":"38"},{"size":460,"mtime":1612755891850,"results":"54","hashOfConfig":"38"},{"size":403,"mtime":1612744139952,"results":"55","hashOfConfig":"38"},{"size":2353,"mtime":1613568473486,"results":"56","hashOfConfig":"38"},{"size":1993,"mtime":1613479109812,"results":"57","hashOfConfig":"38"},{"size":1429,"mtime":1613528310887,"results":"58","hashOfConfig":"38"},{"size":1445,"mtime":1613570800183,"results":"59","hashOfConfig":"38"},{"size":3743,"mtime":1613569832047,"results":"60","hashOfConfig":"38"},{"size":481,"mtime":1613526777441,"results":"61","hashOfConfig":"38"},{"size":101,"mtime":1613526634408,"results":"62","hashOfConfig":"38"},{"size":1832,"mtime":1613570444697,"results":"63","hashOfConfig":"38"},{"size":237,"mtime":1613526932278,"results":"64","hashOfConfig":"38"},{"size":2720,"mtime":1613572019925,"results":"65","hashOfConfig":"38"},{"size":1893,"mtime":1613572252566,"results":"66","hashOfConfig":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1jgdkh6",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1pymijk",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},"/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/index.tsx",[],["144","145","146","147","148"],"/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/reportWebVitals.ts",[],"/Users/macbook/Desktop/programing/trouble-form/trouble-form/src/App.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/index.tsx",[],["149","150","151","152","153"],"/Users/macbook/Desktop/programing/something/trouble-form/src/reportWebVitals.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/App.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/Router.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/index.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/From.tsx",["154"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { push } from 'connected-react-router';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { PrimaryButton, TextInput } from '../components/UI';\nimport '../assets/css/common.css';\nimport { register } from '../reducks/troubleLists/operations';\n\nconst From: React.FC = () => {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [age, setAge] = useState(0);\n  const [gender, setGender] = useState('男');\n  const [trouble, setTrouble] = useState('');\n  const [backGround, setBackGround] = useState('');\n  const [remark, setRemark] = useState('');\n\n  const [usernameError, setUsernameError] = useState('');\n  const [troubleError, setTroubleError] = useState('');\n  const [backGroundError, setBackGroundError] = useState('');\n\n  const inputUsername = useCallback(\n    (event) => {\n      setUsername(event.target.value);\n    },\n    [setUsername]\n  );\n\n  const inputAge = useCallback(\n    (event) => {\n      setAge(event.target.value);\n    },\n    [setAge]\n  );\n\n  const inputGender = useCallback(\n    (event) => {\n      setGender(event.target.value);\n    },\n    [setGender]\n  );\n\n  const inputBackGround = useCallback(\n    (event) => {\n      setBackGround(event.target.value);\n    },\n    [setBackGround]\n  );\n\n  const inputTrouble = useCallback(\n    (event) => {\n      setTrouble(event.target.value);\n    },\n    [setTrouble]\n  );\n\n  const inputRemark = useCallback(\n    (event) => {\n      setRemark(event.target.value);\n    },\n    [setRemark]\n  );\n\n  const submit = (): void => {\n    const userErrorMsg = !username ? '必須項目です' : '';\n    setUsernameError(userErrorMsg);\n    const troubleErrorMsg = !trouble ? '必須項目です' : '';\n    setTroubleError(troubleErrorMsg);\n    const backGroundErrorMsg = !backGround ? '必須項目です' : '';\n    setBackGroundError(backGroundErrorMsg);\n\n    if (userErrorMsg || troubleErrorMsg || backGroundErrorMsg) {\n      alert('入力エラー');\n      window.scrollTo(0, 0);\n      return;\n    }\n    dispatch(register(username, age, gender, trouble, backGround, remark));\n\n    setUsername('');\n    setAge(0);\n    setTrouble('');\n    setBackGround('');\n    setRemark('');\n  };\n\n  return (\n    <div>\n      <section className=\"container\">\n        <TextInput\n          fullWidth\n          label=\"投稿者(必須)\"\n          multiline={false}\n          rows={1}\n          value={username}\n          required={false}\n          type=\"text\"\n          error={usernameError}\n          onChange={inputUsername}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"年齢\"\n          multiline={false}\n          rows={1}\n          value={age}\n          required={false}\n          type=\"number\"\n          error=\"\"\n          onChange={inputAge}\n        />\n\n        <div className=\"input__div\">\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">性別</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={gender}\n              onChange={inputGender}\n            >\n              <FormControlLabel value=\"男\" control={<Radio />} label=\"男\" />\n              <FormControlLabel value=\"女\" control={<Radio />} label=\"女\" />\n            </RadioGroup>\n          </FormControl>\n        </div>\n\n        <TextInput\n          fullWidth\n          label=\"悩み(必須)\"\n          multiline\n          rows={10}\n          value={trouble}\n          required={false}\n          type=\"text\"\n          error={troubleError}\n          onChange={inputTrouble}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"背景(必須)\"\n          multiline\n          rows={10}\n          value={backGround}\n          required={false}\n          type=\"text\"\n          error={backGroundError}\n          onChange={inputBackGround}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"備考\"\n          multiline\n          rows={10}\n          value={remark}\n          required={false}\n          type=\"text\"\n          error=\"\"\n          onChange={inputRemark}\n        />\n\n        <div className=\"btn-container\">\n          <PrimaryButton label=\"投稿\" onClick={submit} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default From;\n","/Users/macbook/Desktop/programing/something/trouble-form/src/views/TroubleList.tsx",["155"],"import { push } from 'connected-react-router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { fetchTroubleLists } from '../reducks/troubleLists/operations';\n// import fetchTroubleLists from '../reducks/troubleLists/operations';\nimport { RootState } from '../reducks/store';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n\nconst useStyles = makeStyles({\n  container: {\n    paddingTop: 24,\n  },\n  table: {\n    width: '100%',\n  },\n});\n\nconst TroubleList = () => {\n  const dispatch = useDispatch();\n  const troubles = useSelector((state: RootState) => state.troubles);\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(fetchTroubleLists());\n  }, []);\n  console.log(troubles);\n  return (\n    <>\n      <div>\n        <TableContainer className={classes.container} component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>タイトル</StyledTableCell>\n                <StyledTableCell align=\"right\">投稿者名</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {troubles.troubles.map((trouble) => (\n                <StyledTableRow key={trouble.id}>\n                  <StyledTableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    onClick={() =>\n                      dispatch(push(`troubleList/detail/${trouble.id}`))\n                    }\n                  >\n                    {trouble.trouble}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    {trouble.username}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n  );\n};\n\nexport default TroubleList;\n","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/reducer.ts",["156"],"import ActionTypes from '../actionTypes';\nimport { TroubleState, TroubleActionTypes } from './types';\n\nconst initialState: TroubleState = {\n  troubles: [],\n};\n\nexport const troublesReducer = (\n  state = initialState,\n  action: TroubleActionTypes\n): TroubleState => {\n  console.log(action);\n  switch (action.type) {\n    case ActionTypes.fetchTroubleLists:\n      return {\n        ...state,\n        troubles: [...action.payload],\n      };\n    default:\n      // const _: never = action;\n      return state;\n  }\n};\n","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/actionTypes.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/actions.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/store.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/troubleLists/operations.ts",["157"],"import { Dispatch, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { push } from 'connected-react-router';\nimport firebase from 'firebase/app';\n// import ActionTypes from '../actionTypes';\nimport { TroubleActionTypes, Trouble } from './types';\nimport { RootState } from '../store';\nimport { db, FirebaseTimeStamp } from '../../firebase';\nimport { fetchTorablesAction } from './actions';\n\nconst troubleRef = db.collection('troubles');\n\nexport const register: ActionCreator<\n  ThunkAction<void, RootState, undefined, TroubleActionTypes>\n> = (\n  username: string,\n  age: number,\n  gender: string,\n  trouble: string,\n  backGround: string,\n  remark: string\n) => {\n  return async (dispatch: Dispatch) => {\n    const timestamp = FirebaseTimeStamp.now();\n\n    const ref = troubleRef.doc();\n\n    const data = {\n      id: ref.id,\n      username,\n      age,\n      gender,\n      trouble,\n      backGround,\n      remark,\n      created_at: timestamp,\n      updated_at: timestamp,\n    };\n\n    await db.collection('troubles').doc(ref.id).set(data, { merge: true });\n    alert('投稿しました');\n    dispatch(push('/'));\n  };\n};\n\nexport const fetchTroubleLists: ActionCreator<\n  ThunkAction<void, RootState, undefined, TroubleActionTypes>\n> = () => {\n  return (dispatch: Dispatch) => {\n    db.collection('troubles').onSnapshot(\n      (\n        snapshots: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n      ) => {\n        const troubleLists: Trouble[] = [];\n        snapshots.forEach(\n          (\n            snapshot: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n          ) => {\n            const trouble = snapshot.data() as Trouble;\n            troubleLists.push(trouble);\n          }\n        );\n        dispatch(fetchTorablesAction(troubleLists));\n      }\n    );\n  };\n};\n","/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/index.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/TextInput.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/components/Header/Header.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/components/UI/PrimaryButton.tsx",[],["158","159","160","161","162"],"/Users/macbook/Desktop/programing/something/trouble-form/src/firebase/index.js",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/firebase/config.js",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/TroubleDetail.tsx",["163"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n// import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { db } from '../firebase';\nimport '../assets/css/common.css';\nimport { Trouble } from '../reducks/troubleLists/types';\n// import { Troble } from '../reducks/troubleLists/types';\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       '& > *': {\n//         margin: theme.spacing(1),\n//       },\n//     },\n//   })\n// );\n\nconst TroubleDetail = () => {\n  // const classes = useStyles();\n  const dispatch = useDispatch();\n  const id = window.location.pathname\n    .split('troubleList/detail')[1]\n    .split('/')[1];\n\n  const [trouble, setTrouble] = useState({\n    id: '',\n    username: '',\n    age: 0,\n    gender: '',\n    business: '',\n    trouble: '',\n    backGround: '',\n    remark: '',\n    created_at: '',\n    updated_at: '',\n  });\n\n  useEffect(() => {\n    console.log(id);\n    db.collection('troubles')\n      .doc(id)\n      .get()\n      .then((doc) => {\n        const data = doc.data() as Trouble;\n        setTrouble(data);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div>\n          <h2>{trouble.trouble}</h2>\n        </div>\n\n        <p>{`投稿者 : ${trouble.username}`}</p>\n        <p>{`年齢 : ${trouble.age}`}</p>\n        <p>{`性別 : ${trouble.gender}`}</p>\n        <p>{`職業 : ${trouble.business}`}</p>\n\n        <div>\n          <u>\n            <h3 className=\"datail__h3\">悩み</h3>\n          </u>\n          <p>{trouble.trouble}</p>\n        </div>\n\n        <div>\n          <u>\n            <h3 className=\"datail__h3\">背景</h3>\n          </u>\n          <p>{trouble.backGround}</p>\n        </div>\n\n        <div>\n          <u>\n            <h3 className=\"datail__h3\">備考</h3>\n          </u>\n          <p>{trouble.remark}</p>\n        </div>\n        <div className=\"btn-container\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => dispatch(push(`/idiaForm/${id}/${trouble.trouble}`))}\n          >\n            ビジネスアイディア投稿\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TroubleDetail;\n","/Users/macbook/Desktop/programing/something/trouble-form/src/components/Header/ClosableDrawer.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/SignIn.tsx",["164"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport '../assets/css/common.css';\nimport { PrimaryButton, TextInput } from '../components/UI';\n\nconst SignIn = () => {\n  const dispatch = useDispatch();\n  const [id, setId] = useState('');\n  const [pass, setPass] = useState(0);\n\n  const inputId = useCallback(\n    (event) => {\n      setId(event.target.value);\n    },\n    [setId]\n  );\n\n  const inputPass = useCallback(\n    (event) => {\n      setPass(event.target.value);\n    },\n    [setPass]\n  );\n\n  const submit = (): void => {\n    if (id !== 'some' && pass !== 12) {\n      alert('idまたはパスワードが違います');\n      window.scrollTo(0, 0);\n      return;\n    }\n    dispatch(push('/menu'));\n  };\n\n  return (\n    <div className=\"container\">\n      <TextInput\n        fullWidth\n        label=\"ID\"\n        multiline\n        rows={1}\n        value={id}\n        required={false}\n        type=\"text\"\n        error=\"\"\n        onChange={inputId}\n      />\n\n      <TextInput\n        fullWidth\n        label=\"pass\"\n        multiline\n        rows={1}\n        value={pass}\n        required={false}\n        type=\"text\"\n        error=\"\"\n        onChange={inputPass}\n      />\n\n      <div className=\"btn-container\">\n        <PrimaryButton label=\"サインイン\" onClick={submit} />\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","/Users/macbook/Desktop/programing/something/trouble-form/src/views/Menu.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/IdiaForm.tsx",["165"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { push } from 'connected-react-router';\nimport { PrimaryButton, TextInput } from '../components/UI';\nimport '../assets/css/common.css';\nimport { register } from '../reducks/idiaLists/operations';\n\nconst IdiaForm = () => {\n  const dispatch = useDispatch();\n  const [id, setId] = useState('');\n  const [trouble, setTrouble] = useState('');\n  const [title, setTitle] = useState('');\n  const [username, setUsername] = useState('');\n  const [target, setTarget] = useState('');\n  const [example, setExample] = useState('');\n  const [remark, setRemark] = useState('');\n\n  const [usernameError, setUsernameError] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [exampleError, setExampleError] = useState('');\n\n  const inputTitle = useCallback(\n    (event) => {\n      setTitle(event.target.value);\n    },\n    [setTitle]\n  );\n\n  const inputUsername = useCallback(\n    (event) => {\n      setUsername(event.target.value);\n    },\n    [setUsername]\n  );\n\n  const inputTarget = useCallback(\n    (event) => {\n      setTarget(event.target.value);\n    },\n    [setTarget]\n  );\n\n  const inputExample = useCallback(\n    (event) => {\n      setExample(event.target.value);\n    },\n    [setExample]\n  );\n\n  const inputRemark = useCallback(\n    (event) => {\n      setRemark(event.target.value);\n    },\n    [setRemark]\n  );\n\n  useEffect(() => {\n    const param = window.location.pathname.split('idiaForm')[1].split('/');\n    setId(param[1]);\n    setTrouble(decodeURI(param[2]));\n  }, []);\n\n  const submit = (): void => {\n    const userErrorMsg = !username ? '必須項目です' : '';\n    setUsernameError(userErrorMsg);\n    const titleErrorMsg = !title ? '必須項目です' : '';\n    setTitleError(titleErrorMsg);\n    const exampleErrorMsg = !example ? '必須項目です' : '';\n    setExampleError(exampleErrorMsg);\n\n    if (userErrorMsg || titleErrorMsg || exampleErrorMsg) {\n      alert('入力エラー');\n      window.scrollTo(0, 0);\n      return;\n    }\n    dispatch(register(id, title, username, target, example, remark));\n  };\n  return (\n    <div>\n      <section className=\"container\">\n        <h2>{trouble}</h2>\n        <TextInput\n          fullWidth\n          label=\"サービス表題(必須)\"\n          multiline={false}\n          rows={1}\n          value={title}\n          required={false}\n          type=\"text\"\n          error={titleError}\n          onChange={inputTitle}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"投稿者(必須)\"\n          multiline={false}\n          rows={1}\n          value={username}\n          required={false}\n          type=\"text\"\n          error={usernameError}\n          onChange={inputUsername}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"ターゲット象\"\n          multiline\n          rows={10}\n          value={target}\n          required={false}\n          type=\"text\"\n          error=\"\"\n          onChange={inputTarget}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"サービス例(必須)\"\n          multiline\n          rows={10}\n          value={example}\n          required={false}\n          type=\"text\"\n          error={exampleError}\n          onChange={inputExample}\n        />\n\n        <TextInput\n          fullWidth\n          label=\"備考\"\n          multiline\n          rows={10}\n          value={remark}\n          required={false}\n          type=\"text\"\n          error=\"\"\n          onChange={inputRemark}\n        />\n\n        <div className=\"btn-container\">\n          <PrimaryButton label=\"投稿\" onClick={submit} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default IdiaForm;\n","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/idiaLists/reducer.ts",["166"],"import ActionTypes from './actionTypes';\nimport { IdiaState, IdiaActionTypes } from './types';\n\nconst initialState: IdiaState = {\n  idias: [],\n};\n\nexport const idiaReducer = (\n  state = initialState,\n  action: IdiaActionTypes\n): IdiaState => {\n  console.log(action);\n  switch (action.type) {\n    case ActionTypes.fetchIdiaLists:\n      return {\n        ...state,\n        idias: [...action.payload],\n      };\n    default:\n      // const _: never = action;\n      return state;\n  }\n};\n","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/idiaLists/actionTypes.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/idiaLists/operations.ts",["167","168"],"import { Dispatch, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { push } from 'connected-react-router';\nimport firebase from 'firebase/app';\n// import ActionTypes from '../actionTypes';\nimport { Idia, IdiaActionTypes } from './types';\nimport { RootState } from '../store';\nimport { db, FirebaseTimeStamp } from '../../firebase';\nimport { fetchIdiaAction } from './actions';\n\nconst idiaRef = db.collection('idias');\n\nexport const register: ActionCreator<\n  ThunkAction<void, RootState, undefined, IdiaActionTypes>\n> = (\n  troubleId: string,\n  title: string,\n  username: string,\n  target: string,\n  example: string,\n  remark: string\n) => {\n  return async (dispatch: Dispatch) => {\n    console.log('komikomi');\n    const timestamp = FirebaseTimeStamp.now();\n\n    const ref = idiaRef.doc();\n\n    const data = {\n      id: ref.id,\n      trouble_id: troubleId,\n      title,\n      username,\n      target,\n      example,\n      remark,\n      created_at: timestamp,\n      updated_at: timestamp,\n    };\n\n    await db.collection('idias').doc(ref.id).set(data, { merge: true });\n    alert('投稿しました');\n    dispatch(push('/menu'));\n  };\n};\n\nexport const fetchIdiaLists: ActionCreator<\n  ThunkAction<void, RootState, undefined, IdiaActionTypes>\n> = () => {\n  return (dispatch: Dispatch) => {\n    db.collection('idias').onSnapshot(\n      (\n        snapshots: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n      ) => {\n        const idiaLists: Idia[] = [];\n        snapshots.forEach(\n          (\n            snapshot: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n          ) => {\n            const idia = snapshot.data() as Idia;\n            idiaLists.push(idia);\n          }\n        );\n        dispatch(fetchIdiaAction(idiaLists));\n      }\n    );\n  };\n};\n","/Users/macbook/Desktop/programing/something/trouble-form/src/reducks/idiaLists/actions.ts",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/IdiaList.tsx",[],"/Users/macbook/Desktop/programing/something/trouble-form/src/views/IdiaDetail.tsx",["169","170"],"import React, { useEffect, useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { push } from 'connected-react-router';\n// import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { db } from '../firebase';\nimport '../assets/css/common.css';\nimport { Idia } from '../reducks/idiaLists/types';\n\nconst IdiaDetail = () => {\n  // const dispatch = useDispatch();\n  // const id = window.location.pathname.split('idia/detail')[1].split('/')[1];\n  const id = window.location.pathname.split('idiaList/detail')[1].split('/')[1];\n  console.log(id);\n\n  const [idia, setIdia] = useState({\n    id: '',\n    trouble_id: '',\n    trouble: '',\n    title: '',\n    username: '',\n    target: '',\n    example: '',\n    remark: '',\n    created_at: '',\n    updated_at: '',\n  });\n\n  useEffect(() => {\n    console.log(id);\n    db.collection('idias')\n      .doc(id)\n      .get()\n      .then((doc) => {\n        const data = doc.data() as Idia;\n        setIdia(data);\n      });\n  }, []);\n  return (\n    <>\n      <div className=\"container\">\n        <div>\n          <h2>{idia.title}</h2>\n        </div>\n\n        <p>{`投稿者 : ${idia.username}`}</p>\n        <div>\n          <u>\n            <h3 className=\"datail__h3\">ターゲット像</h3>\n          </u>\n          <p>{idia.target}</p>\n        </div>\n\n        <div>\n          <u>\n            <h3 className=\"datail__h3\">サービス例</h3>\n          </u>\n          <p>{idia.example}</p>\n        </div>\n\n        <div>\n          <u>\n            <h3 className=\"datail__h3\">備考</h3>\n          </u>\n          <p>{idia.remark}</p>\n        </div>\n        <div className=\"btn-container\">\n          <Button variant=\"outlined\" color=\"primary\">\n            ブレインストーミング\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IdiaDetail;\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"171","replacedBy":"181"},{"ruleId":"173","replacedBy":"182"},{"ruleId":"175","replacedBy":"183"},{"ruleId":"177","replacedBy":"184"},{"ruleId":"179","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":77,"column":7,"nodeType":"188","messageId":"189","endLine":77,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":60,"column":3,"nodeType":"192","messageId":"189","endLine":60,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":12,"column":3,"nodeType":"192","messageId":"189","endLine":12,"endColumn":14},{"ruleId":"186","severity":1,"message":"187","line":41,"column":5,"nodeType":"188","messageId":"189","endLine":41,"endColumn":20},{"ruleId":"171","replacedBy":"193"},{"ruleId":"173","replacedBy":"194"},{"ruleId":"175","replacedBy":"195"},{"ruleId":"177","replacedBy":"196"},{"ruleId":"179","replacedBy":"197"},{"ruleId":"190","severity":1,"message":"191","line":42,"column":5,"nodeType":"192","messageId":"189","endLine":42,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":28,"column":7,"nodeType":"188","messageId":"189","endLine":28,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":72,"column":7,"nodeType":"188","messageId":"189","endLine":72,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":12,"column":3,"nodeType":"192","messageId":"189","endLine":12,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":24,"column":5,"nodeType":"192","messageId":"189","endLine":24,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":42,"column":5,"nodeType":"188","messageId":"189","endLine":42,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":14,"column":3,"nodeType":"192","messageId":"189","endLine":14,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":30,"column":5,"nodeType":"192","messageId":"189","endLine":30,"endColumn":16},"lines-around-directive",["198"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["198"],[],[],[],[],"no-alert","Unexpected alert.","CallExpression","unexpected","no-console","Unexpected console statement.","MemberExpression",["198"],[],[],[],[],"padding-line-between-statements"]